{"version":3,"file":"static/js/258.0cdb93c1.chunk.js","mappings":"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","sources":["CommonStyle/Button.styled.jsx","Pages/Measure/Measure.styled.jsx","js/SchemaValidation/measureSchema.js","components/forms/FormaMeasure/FormaMeasure.styled.js","components/forms/FormaMeasure/FormaMeasure.jsx","Pages/Measure/Measure.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport theme from 'CommonStyle/themeJSX';\r\n\r\nexport const ButtonBase = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  font-size: 18px;\r\n  line-height: calc(26 / 18);\r\n  font-weight: 700;\r\n  text-align: center;\r\n  color: ${theme.colors.primaryLight};\r\n  width: 100%;\r\n  padding: 12px;\r\n  letter-spacing: 0.2px;\r\n\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 10px;\r\n\r\n  opacity: 1;\r\n  background-color: ${theme.colors.green};\r\n  transition: all ${theme.animation.cubicBezier};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\r\n  }\r\n  &:active {\r\n    box-shadow: none;\r\n  }\r\n  &:disabled {\r\n    opacity: 0.3;\r\n\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport theme from 'CommonStyle/themeJSX';\r\n\r\nexport const MeasureSection = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 15px 0;\r\n  gap: 15px;\r\n`;\r\nexport const SwitchButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  border-radius: 10px;\r\n  border: 1px solid ${theme.colors.green};\r\n  overflow: hidden;\r\n\r\n  button {\r\n    width: 50%;\r\n    height: 32px;\r\n    color: ${theme.colors.green};\r\n    text-align: center;\r\n\r\n    font-size: 12px;\r\n    font-weight: 800;\r\n    line-height: normal;\r\n    letter-spacing: 2.5px;\r\n    text-transform: uppercase;\r\n\r\n    background: #fff;\r\n  }\r\n\r\n  .active {\r\n    background: rgba(95, 203, 57, 0.2);\r\n  }\r\n`;\r\n","import * as yup from 'yup';\r\n\r\nexport const measureSchema = yup.object().shape({\r\n  height: yup.number().min(0).max(300).required(),\r\n  currentWeight: yup.number().min(0).max(300).required(),\r\n});\r\n","import styled from 'styled-components';\r\nimport theme from 'CommonStyle/themeJSX';\r\n\r\nexport const FormaMeasureST = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: ${prop => prop.$gap || '16px'};\r\n  width: 100%;\r\n\r\n  button {\r\n    margin-top: 136px;\r\n  }\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  font-size: ${prop => prop.$fontSize || '16px'};\r\n  font-weight: ${prop => prop.$fontWeight || '400'};\r\n  line-height: calc(20 / ${prop => parseInt(prop.$fontSize, 10) || '16'});\r\n  color: ${theme.colors.primaryDark};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 8px;\r\n  width: 100%;\r\n`;\r\nexport const Input = styled.input`\r\n  color: ${theme.colors.secondDark};\r\n  font-size: 14px;\r\n  line-height: calc(24 / 14);\r\n  letter-spacing: 0.25px;\r\n  padding: 19px 13px;\r\n\r\n  border-radius: 10px;\r\n  border: 1px solid ${theme.colors.secondGrey};\r\n  background: ${theme.colors.primaryLight};\r\n\r\n  width: 100%;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &::placeholder {\r\n    color: ${theme.colors.secondDark};\r\n  }\r\n`;\r\n\r\nexport const InputError = styled.p`\r\n  font-size: 14px;\r\n  line-height: calc(18 / 14);\r\n  color: ${theme.colors.red};\r\n`;\r\n","import { measureSchema } from 'js/SchemaValidation/measureSchema';\r\nimport { useFormik } from 'formik';\r\nimport React from 'react';\r\nimport {\r\n  FormLabel,\r\n  FormaMeasureST,\r\n  Input,\r\n  InputError,\r\n} from './FormaMeasure.styled';\r\nimport { ButtonBase } from 'CommonStyle/Button.styled';\r\n\r\nconst FormaMeasure = ({ units, handlerClick, dataInitial }) => {\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleSubmit,\r\n    handleChange,\r\n    isValid,\r\n\r\n    handleBlur,\r\n  } = useFormik({\r\n    initialValues: {\r\n      height: dataInitial.height,\r\n      currentWeight: dataInitial.currentWeight,\r\n    },\r\n    validationSchema: measureSchema,\r\n    onSubmit: values => {\r\n      handlerClick(values.height, values.currentWeight);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <FormaMeasureST onSubmit={handleSubmit}>\r\n      <FormLabel>\r\n        <Input\r\n          type=\"number\"\r\n          step=\"0.001\"\r\n          name=\"height\"\r\n          value={values.height}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          placeholder={units ? 'Height(ft)' : 'Height(m)'}\r\n          error={touched.height && errors.height}\r\n        />\r\n        {touched.height && errors.height && (\r\n          <InputError>{errors.height}</InputError>\r\n        )}\r\n      </FormLabel>\r\n      <FormLabel>\r\n        <Input\r\n          type=\"number\"\r\n          step=\"0.001\"\r\n          name=\"currentWeight\"\r\n          value={values.currentWeight}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          placeholder={units ? 'Current Weight(lb)' : 'Current Weight(kg)'}\r\n          error={touched.currentWeight && errors.currentWeight}\r\n        />\r\n        {touched.currentWeight && errors.currentWeight && (\r\n          <InputError>{errors.currentWeight}</InputError>\r\n        )}\r\n      </FormLabel>\r\n\r\n      <ButtonBase\r\n        type=\"submit\"\r\n        disabled={!isValid || (!values.height && !values.currentWeight)}\r\n      >\r\n        Continue\r\n      </ButtonBase>\r\n    </FormaMeasureST>\r\n  );\r\n};\r\n\r\nexport default FormaMeasure;\r\n","import {\r\n  HeroContainer,\r\n  MainDescription,\r\n  MainTitle,\r\n} from 'CommonStyle/Hero.styled';\r\nimport React, { useState } from 'react';\r\nimport { MeasureSection, SwitchButtonContainer } from './Measure.styled';\r\nimport FormaMeasure from 'components/forms/FormaMeasure/FormaMeasure';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMyContext } from 'js/useContext';\r\n\r\nconst Measure = () => {\r\n  const { data, updateData } = useMyContext();\r\n\r\n  const [isImperial, setImperial] = useState(() => {\r\n    return data.units === 'Imperial' || !data.units;\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  const togglerHandler = e => {\r\n    if (e.currentTarget.className === 'active') {\r\n      return;\r\n    }\r\n    setImperial(!isImperial);\r\n  };\r\n  const handlerClick = (height, currentWeight) => {\r\n    updateData({\r\n      height,\r\n      currentWeight,\r\n      units: isImperial ? 'Imperial' : 'Metric',\r\n    });\r\n    navigate('/behaviors', { replace: false });\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <MeasureSection>\r\n        <HeroContainer>\r\n          <MainTitle>Measure Yourself</MainTitle>\r\n          <MainDescription>\r\n            What are your height and body weight?\r\n          </MainDescription>\r\n        </HeroContainer>\r\n        <SwitchButtonContainer>\r\n          <button\r\n            onClick={togglerHandler}\r\n            className={isImperial ? 'active' : ''}\r\n          >\r\n            Imperial\r\n          </button>\r\n          <button\r\n            onClick={togglerHandler}\r\n            className={isImperial ? '' : 'active'}\r\n          >\r\n            Metric\r\n          </button>\r\n        </SwitchButtonContainer>\r\n\r\n        <FormaMeasure\r\n          units={isImperial}\r\n          handlerClick={handlerClick}\r\n          dataInitial={data}\r\n        />\r\n      </MeasureSection>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Measure;\r\n"],"names":["ButtonBase","styled","_templateObject","_taggedTemplateLiteral","theme","MeasureSection","SwitchButtonContainer","_templateObject2","measureSchema","yup","shape","height","min","max","required","currentWeight","FormaMeasureST","prop","$gap","FormLabel","$fontSize","$fontWeight","parseInt","Input","_templateObject3","InputError","_templateObject4","_ref","units","handlerClick","dataInitial","_useFormik","useFormik","initialValues","validationSchema","onSubmit","values","touched","errors","handleSubmit","handleChange","isValid","handleBlur","_jsxs","children","_jsx","type","step","name","value","onChange","onBlur","placeholder","error","disabled","_useMyContext","useMyContext","data","updateData","_useState","useState","_useState2","_slicedToArray","isImperial","setImperial","navigate","useNavigate","togglerHandler","e","currentTarget","className","HeroContainer","MainTitle","MainDescription","onClick","FormaMeasure","replace"],"sourceRoot":""}